<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace = "org.zerock.wego.mapper.CommentMapper">

  	<!-- *********** 존재여부 ************ -->
	<select id="isExist" 
			resultType = "java.lang.Boolean">
		SELECT
        	CASE WHEN 
        	EXISTS (
            	SELECT 1 
            	FROM comment_tb
            	WHERE comment_id = #{commentId}
            	AND status = 'N'
        		) 
        		THEN 1 ELSE 0 END AS exist
    	FROM dual
	</select>

  	<!-- *********** 타겟 댓글 총합 ************ -->
  	 
  	<select
    	id="selectTotalCountByTarget" 
    	resultType="Integer">
    	
    	SELECT 
  			comment_cnt
  		FROM 
  			<choose>
  				<when test="targetGb == 'SAN_REVIEW'">
  					san_review_tb
  				</when>
  				<when test="targetGb == 'SAN_PARTY'">
  					san_party_tb
  				</when>
  			</choose>
         <where>
         <choose>
  				<when test="targetGb == 'SAN_REVIEW'">
  					san_review_id = #{targetCd}
  				</when>
  				<when test="targetGb == 'SAN_PARTY'">
  					san_party_id = #{targetCd}
  				</when>
  			</choose>
         </where>
    </select> 
  	
    <!-- ***********타겟으로 댓글만 오프셋 조회************ -->
    <select
    	id="selectCommentOffsetByTarget" 
    	resultType="org.zerock.wego.domain.common.CommentViewVO">
    	
    	SELECT 
  				*
  		FROM 
  			comment_v
         	
     <where>
       	<if test="lastCommentId > 0">
       		comment_id &lt; #{lastCommentId}
       	AND
       	</if>
       		target_cd = #{target.targetCd}
       	AND 
	       target_gb = #{target.targetGb}
	    AND
	    	status IN ('N', 'Y')
	    AND
	       comment_gb = 'COMMENT'
      </where>
        ORDER BY
         	COMMENT_ID DESC
        
        OFFSET 0 ROWS
        FETCH NEXT #{target.amount} ROWS ONLY
    </select> 
    
    
    <!-- ***********댓글코드로 멘션만 조회************ -->
     <select
    	id="selectMentionsByCommentId" 
    	resultType="org.zerock.wego.domain.common.CommentViewVO">
    	
    	SELECT 
  				*
  		FROM 
  			comment_v
        <where>
        	mention_id = #{commentId}
        	AND
        	status = 'N'
        </where>
        ORDER BY
         	COMMENT_ID ASC
    </select> 
    
     
  	<!-- ***********댓글 코드로 댓글 조회************ -->
     <select
    	id="selectById" 
    	resultType="org.zerock.wego.domain.common.CommentViewVO">
    	
    	SELECT 
  				*
  		FROM 
  			comment_v
        WHERE
        	comment_id = #{commentId}
    </select> 
    
    
  	<!-- ***********댓글 코드로 멘션 유무 조회 ************ -->
    <select
    	id="hasMentionById" 
    	resultType="Integer">
    		
    	SELECT 1
    	FROM dual
    	WHERE EXISTS(
  				SELECT 1
  				FROM comment_tb
  				WHERE mention_id = #{commentId} 
  				AND status = 'N' 
  			)
    </select> 
    
    <!-- ***************** 댓글 삭제 ******************** -->
    <delete
    	id="deleteById">
    	
    	DELETE
    	FROM 
    		comment_tb
    	
    	<where>
    	comment_id = #{commentId}
    	</where>
    
    </delete>
    
    <!-- ***************** 특정글 댓글 전체 삭제 ******************** -->
    <delete
    	id="deleteAllByTarget">
    	
    	DELETE
    	FROM 
    		comment_tb
    	
    	<where>
    	target_gb = #{targetGb}
    	and
    	target_cd = #{targetCd}
    	</where>
    
    </delete>
    
    <!-- ***************** 댓글 작성 ******************** -->
    <insert
    	id="insertComment">
    	
    	INSERT INTO comment_tb(
    		target_gb,
    		target_cd,
    		user_id,
    		<if test="mentionId != null">
    		mention_id,
    		comment_gb,
    		</if> 
    		contents)
    	VALUES(
    		#{targetGb},
    		#{targetCd},
    		#{userId},
    		<if test="mentionId != null">
    		#{mentionId},
    		#{commentGb},
    		</if>
    		#{contents}	
	    	)
	    <selectKey keyProperty="commentId" resultType ="Integer" order ="AFTER">
	    	SELECT
	    		MAX(comment_id)
	    	FROM
	    		comment_tb
	    </selectKey>
    </insert>
    
    <!-- ***************** 댓글 수정 ******************** -->
    <update
    	id="updateComment">
    	
    	UPDATE 
    		comment_tb
    	SET
    		contents = #{contents},
    		modified_dt = current_timestamp,
    		
    		<if test="#{status} != null">
    		status = #{status}
    		</if>
    	WHERE
    		comment_id = #{commentId}
    </update>
    
    <!-- **************** 소속글 댓글수 증가/감소 ******************** -->
    <update
    	id="updateTargetCommentCnt">
    	
    	UPDATE
    		<choose>
	    		<when test="comment.targetGb == 'SAN_REVIEW'">
    			san_review_tb
    			</when>
    			<when test="comment.targetGb == 'SAN_PARTY'">
    			san_party_tb
    			</when>
    		</choose> 
    	SET
    		<choose>
    			<when test="act == 'INSERT'">
	    		comment_cnt = comment_cnt + 1
    			</when>
    			<when test="act == 'DELETE'">
    			comment_cnt = comment_cnt - 1
    			</when>
    		</choose>
    	WHERE
    		<choose>
	    		<when test="comment.targetGb == 'SAN_REVIEW'">
    			san_review_id = #{comment.targetCd}
    			</when>
    			<when test="comment.targetGb == 'SAN_PARTY'">
    			san_party_id = #{comment.targetCd}
    			</when>
    		</choose> 
    </update>
    
     <!-- ***************** 댓글 영구삭제  ******************** -->
    
<!--     	<delete id="deleteDeadComment"> -->
<!--     		DELETE -->
<!--     		FROM -->
<!--     			comment_tb -->
<!--     		<where> -->
<!--     			status = 'Y' -->
<!--     		</where>		 -->
<!--     	</delete> -->
    	
  </mapper>
  
  
  
  
  
  												